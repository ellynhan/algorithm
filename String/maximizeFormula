//1137
#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <set>
using namespace std;
 
 long long cal(vector<string>& priority, vector<string>& parts){
     int visited[100]={0};
     int used = 0;
     int ordCnt = 0;
     while(used != parts.size()){
        for(int i=0; i<parts.size(); i++){
            if(priorit)
        }
        ordCnt ++;
     }
     
 }


long long solution(string expression) {
    long long answer = 0;
    vector<string> orders;
    set<string> tmp;
    vector<int> operands;
    string str="";
    for(int i=0; i<expression.length(); i++){
        if(expression[i]>='0'&&expression[i]<='9'){
            str+= expression[i];
        }else{
            operands.push_back(stoi(str));
            orders.push_back(str);
            orders.push_back(expression[i]);
            str = "";
            tmp.insert(string(expression[i]));
        }
    }
    set<string>::iterator it;
    vector<string>operators;
    for(it=tmp.begin(); it!=tmp.end(); it++){
        operators.push_back(*it);
    }

    do {
        for(int i=0; i<operators.size(); i++){
            cout<<operators[i]<<" ";
        }
        cout<<endl;
    }while(next_permutation(operators.begin(), operators.end()));
    answer = operands[0];
    for(int i=1; i<operands.size(); i++){

    }
    return answer;
}

int main(){
    solution("100-200*300-500+20");
}
